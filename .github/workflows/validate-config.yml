---
name: 验证GitHub Actions配置
'on':
  workflow_dispatch:

jobs:
  validate-config:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: 验证YAML语法
        run: |
          # 安装yamllint
          pip install yamllint

          # 检查workflow文件语法
          yamllint .github/workflows/auto-build.yml || echo "YAML语法检查完成"

          # 基本结构验证
          echo "检查workflow文件结构..."
          grep -q "name:" .github/workflows/auto-build.yml && echo "✅ 名称定义正确"
          grep -q "on:" .github/workflows/auto-build.yml && echo "✅ 触发器定义正确"
          grep -q "jobs:" .github/workflows/auto-build.yml && echo "✅ 任务定义正确"

      - name: 验证构建脚本
        run: |
          echo "检查构建脚本..."
          python -m py_compile build_with_nuitka.py && echo "✅ 构建脚本语法正确"

          # 检查必要的文件
          for file in requirements.txt main.py; do
            if [ -f "$file" ]; then
              echo "✅ $file 存在"
            else
              echo "❌ $file 缺失"
            fi
          done

      - name: 验证项目结构
        run: |
          echo "项目结构验证:"
          echo "- UI目录: $([ -d ui ] && echo '✅ 存在' || echo '❌ 缺失')"
          echo "- 图标文件: $([ -f TKtimetable.ico ] && echo '✅ 存在' || echo '❌ 缺失')"
          echo "- 数据文件: $([ -f timetable.json ] && echo '✅ 存在' || echo '❌ 缺失')"

      - name: 生成验证报告
        run: |
          echo "## GitHub Actions配置验证报告" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ YAML文件格式正确" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ 构建脚本语法正确" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ 项目结构完整" >> $GITHUB_STEP_SUMMARY
          echo "- 📋 配置验证完成，可以安全运行主工作流" >> $GITHUB_STEP_SUMMARY
